(()=>{"use strict";new class{constructor(){this.pageWrapper=document.querySelector('[data-page="wrapper"]'),this.ticketApp=this.pageWrapper.querySelector('[data-ticket="app"]'),this.ticketArea=this.ticketApp.querySelector('[data-ticket="area"]'),this.addTicketForm=document.forms.newTicket,this.editTicketForm=document.forms.editTicketForm,this.modalWindowDeleteTicket=this.pageWrapper.querySelector('[data-ticket="delete-ticket-window"]'),this.modalWindowComplieteTicket=this.pageWrapper.querySelector('[data-ticket="compliete-ticket-window"]'),this.ifDescriptionEmpty="Описание отсутствует",this.getAllTickets("GET","allTickets"),this.ticketControl(),this.addNewTicket()}getAllTickets(t,e){this.request(t,e).then((t=>{const e=JSON.parse(t);e.sort(((t,e)=>{let i=null;return t.created>e.created&&(i=1),t.created<e.created&&(i=-1),i})),e.forEach((t=>this.setTicketOnPage(t)))}))}request(t,e){return new Promise((i=>{let s="https://ticket-list.herokuapp.com/";const a=new XMLHttpRequest;a.addEventListener("readystatechange",(()=>{4===a.readyState&&i(a.response)})),"GET"===t?(s=`${s}?${e}`,a.open(t,s),a.send()):"POST"===t&&(a.open(t,s),a.send(e))}))}setTicketOnPage(t){void 0===t.description&&(t.description=this.ifDescriptionEmpty);const e=`\n        <div class="ticket ticketId" name="ticket" data-ticketId="${t.id}">\n            <div class="ticket-box">\n                <div class="ticket__left-side">\n                    <div class="ticket__btn ticket__check-box ${"false"===t.status?"":"checked"}" data-ticket-status=${t.status} data-ticket="checkBox"></div>\n                    <span class="ticket__text" data-ticket="name">${t.name}</span>\n                </div>\n                <div class="ticket__right-side">\n                    <span class="ticket__date">${t.created}</span>\n                    <div class="ticket__btns">\n                        <div class="ticket__edit-btn ticket__btn" data-ticket="edit-btn"></div>\n                        <div class="ticket__delete-btn ticket__btn" data-ticket="delete-btn"></div>\n                    </div>\n                </div>\n            </div>\n            <div class="ticket__description-box">\n                <span class="ticket__description-text hidden" data-ticket="description">${t.description}</span>\n            </div>\n        </div>`;this.ticketArea.insertAdjacentHTML("beforeend",e)}ticketControl(){this.ticketArea.addEventListener("click",(t=>{if("name"===t.target.dataset.ticket){t.target.closest(".ticketId").querySelector('[data-ticket="description"]').classList.toggle("hidden")}else"delete-btn"===t.target.dataset.ticket?this.deleteTicket(t.target.closest(".ticketId")):"edit-btn"===t.target.dataset.ticket?this.editTicket(t.target.closest(".ticketId")):"checkBox"===t.target.dataset.ticket&&this.complieteTicket(t.target.closest(".ticketId"))}))}createFormData(t){const e=new FormData(t);return e.set("id",null),e.set("created",this.createDate()),e.set("status",!1),e}addNewTicket(){this.addTicketForm.addEventListener("keydown",(t=>"Enter"!==t.key||t.preventDefault()));this.ticketApp.querySelector('[data-ticket="addTicket__btn"]').addEventListener("click",(()=>{this.addTicketForm.classList.remove("hidden")})),this.addTicketForm.addEventListener("click",(t=>{if("cancel-btn"===t.target.dataset.createTicketFormBtn)this.addTicketForm.reset(),this.addTicketForm.classList.add("hidden"),this.addTicketForm.name.classList.remove("empty"),this.addTicketForm.name.placeholder="";else if("ok-btn"===t.target.dataset.createTicketFormBtn){const t=this.addTicketForm.name;if(""===t.value)return t.classList.add("empty"),void(t.placeholder="Это обязательное поле");this.request("POST",this.createFormData(this.addTicketForm)).then((t=>{const e=JSON.parse(t);this.setTicketOnPage(e)})),this.addTicketForm.reset(),this.addTicketForm.classList.add("hidden")}}))}deleteTicket(t){const e=i=>{if("ok-btn"===i.target.dataset.modalWindowDeleteTicket){const i=new URLSearchParams;i.append("option","deleteTicket"),i.append("id",t.dataset.ticketid),this.request("GET",i).then((e=>{e&&t.remove()})),this.modalWindowDeleteTicket.removeEventListener("click",e),this.modalWindowDeleteTicket.classList.add("hidden")}else this.modalWindowDeleteTicket.removeEventListener("click",e),this.modalWindowDeleteTicket.classList.add("hidden")};this.modalWindowDeleteTicket.classList.remove("hidden"),this.modalWindowDeleteTicket.addEventListener("click",e)}editTicket(t){const e=this.editTicketForm.elements,i=t.querySelector('[data-ticket="name"]'),s=t.querySelector('[data-ticket="description"]'),a=t.querySelector('[data-ticket-status="false"]');e.name.value=i.textContent,e.description.value=s.textContent,this.editTicketForm.classList.remove("hidden");const c=e=>{if("cancel-btn"===e.target.dataset.editTicketFormBtn)this.editTicketForm.reset(),this.editTicketForm.classList.add("hidden"),this.editTicketForm.removeEventListener("click",c);else if("ok-btn"===e.target.dataset.editTicketFormBtn){const e=new FormData(this.editTicketForm);e.get("description")===this.ifDescriptionEmpty&&e.set("description",""),e.set("id",t.dataset.ticketid),e.set("status",a.dataset.ticketStatus),this.request("POST",e).then((t=>{const e=JSON.parse(t);void 0===e.description||""===e.description?s.textContent=this.ifDescriptionEmpty:s.textContent=e.description,i.textContent=e.name,a.dataset.ticketStatus=e.status})),this.editTicketForm.reset(),this.editTicketForm.classList.add("hidden"),this.editTicketForm.removeEventListener("click",c)}};this.editTicketForm.addEventListener("click",c)}complieteTicket(t){const e=t.querySelector('[data-ticket="checkBox"]'),i=new FormData;i.set("id",t.dataset.ticketid),i.set("changeStatus",!0),"true"===e.dataset.ticketStatus?(e.dataset.ticketStatus="false",i.set("status",!1),this.request("POST",i).then((()=>{e.classList.remove("checked")}))):"false"===e.dataset.ticketStatus&&(e.dataset.ticketStatus="true",i.set("status",!0),this.request("POST",i).then((()=>{e.classList.add("checked")})))}createDate(){const t=new Date;return`${t.getDate()<10?`0${t.getDate()}`:t.getDate()}.${t.getMonth()<10?`0${t.getMonth()+1}`:t.getMonth()+1}.${t.getFullYear()} ${t.getHours()<10?`0${t.getHours()}`:t.getHours()}:${t.getMinutes()<10?`0${t.getMinutes()}`:t.getMinutes()}`}}})();